name: Compile kernel msm8916

on:
  push:
    branches:
      - '*'
  pull_request:
  workflow_dispatch:

env:
  TZ: Asia/Jakarta
  HN: chewy

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install acl aptly bc binfmt-support binutils bison btrfs-progs build-essential busybox ca-certificates ccache clang coreutils cpio crossbuild-essential-arm64 cryptsetup curl debian-archive-keyring debian-keyring debootstrap device-tree-compiler dialog dirmngr distcc dosfstools dwarves f2fs-tools fakeroot flex gawk gcc gdisk git gpg gzip imagemagick jq kmod libbison-dev libcrypto++-dev libelf-dev libfdt-dev libfile-fcntllock-perl libfl-dev libfuse-dev liblz4-tool libncurses-dev libncurses5 libncurses5-dev libncursesw5-dev libpython3-dev libssl-dev libusb-1.0-0-dev linux-base lld llvm locales lz4 lzma lzop mtools ncurses-base ncurses-term nfs-kernel-server ntpdate p7zip p7zip-full parallel parted patchutils pigz pixz pkg-config pv python3 python3-dev python3-distutils python3-setuptools qemu-user-static rename rsync swig tar udev unzip uuid uuid-dev uuid-runtime vim wget whiptail xz-utils zip zlib1g-dev zstd
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo hostnamectl set-hostname "$HN"

    - name: Prepare repository
      run: git config --global --add safe.directory "$(pwd)"

    - name: Compile kernel
      run: |
        mkdir modules
        sed -i "s/Handsome OpenStick UZ801/UZ801 V3.2/g" arch/arm64/boot/dts/qcom/*uz801*.dts
        export CROSS_COMPILE=aarch64-linux-gnu-
        export ARCH=arm64
        export LOCALVERSION=
        make LOCALVERSION= mrproper
        make uz801v3_defconfig
        make LOCALVERSION= Image modules dtbs -j$(nproc)
        make LOCALVERSION= INSTALL_MOD_PATH=modules modules_install

    - name: Prepare artifacts
      run: |
        mkdir artifacts
        cp arch/arm64/boot/Image artifacts/
        gzip artifacts/Image
        cp arch/arm64/boot/dts/qcom/*uz801*.dtb artifacts/
        (cd modules/lib/modules && tar cfz ../../../artifacts/modules.tar.gz *)

    - name: Upload linux directory
      uses: actions/upload-artifact@main
      with:
        name: kernel
        path: artifacts/*
